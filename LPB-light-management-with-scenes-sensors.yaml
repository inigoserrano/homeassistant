blueprint:
  name: LPB - Lights management with scences and sensors
  description: This blueprint controls the state of the lights of a room.
  domain: automation
  input:
    area_state:
      name: Area state
      selector:
        entity:
          domain: binary_sensor
          device_class: occupancy
    area_iluminated:
      name: Area iluminated
      description: Sensor iluminate of the room.
      selector:
        entity:
          domain: binary_sensor
          device_class: light
    night_mode:
      name: Night mode
      description: Night mode.
      selector:
        entity:
          domain: input_boolean
    light_state:
      name: Light state
      selector:
        entity:
          domain: light
    scene_light_off:
      name: Light off Scene
      description: Scene for ambient state. Will be activated when no motion is detected and light level is under threshold. Default value = scene.none
      default: scene.none
      selector:
        entity:
          domain: scene
    scene_day_light:
      name: Day Light Scene
      description: Scene for ambient state. Will be activated when no motion is detected and light level is under threshold. Default value = scene.none
      default: scene.none
      selector:
        entity:
          domain: scene
    scene_night_light:
      name: Night Light Scene
      description: Scene for ambient state. Will be activated when no motion is detected and light level is under threshold. Default value = scene.none
      default: scene.none
      selector:
        entity:
          domain: scene
mode: parallel
max_exceeded: silent
trigger:
  - platform: state
    entity_id: !input "area_state"
  - platform: state
    entity_id: !input "area_iluminated"
action:
  - variables:
      area_occupied_sensor: !input "area_state"
      light_sensor: !input "light_state"
      iluminated_sensor: !input "area_iluminated"
      area_occupied: "{{ is_state(area_occupied_sensor,'on') }}"
      area_not_occupied: "{{ is_state(area_occupied_sensor,'off') }}"
      need_turn_on_light: "{{ is_state(iluminated_sensor, 'off')
        and area_occupied
        and is_state(light_sensor, 'off') }}"
      need_turn_off_light: "{{ area_not_occupied
        and is_state(light_sensor, 'on') }}"
  - choose:
      - conditions:
          - "{{ need_turn_off_light }}"
        sequence:
          - service: scene.turn_on
            entity_id: !input scene_light_off
      - conditions:
          - "{{ need_turn_on_light }}"
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input "night_mode"
                    state: "off"
                sequence:
                  - service: scene.turn_on
                    entity_id: !input scene_day_light
            default:
              - service: scene.turn_on
                entity_id: !input scene_night_light
