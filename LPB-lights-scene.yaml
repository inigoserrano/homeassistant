blueprint:
  name: LPB - Lights management with scences
  description: XXX Turn lights off not on.
  domain: automation
  input:
    light_state:
      name: Lights state
      selector:
        entity:
          domain: input_select
    scene_light_off:
      name: Light off Scene
      description: Scene for ambient state. Will be activated when no motion is detected and light level is under threshold. Default value = scene.none
      default: scene.none
      selector:
        entity:
          domain: scene
    scene_reference_light:
      name: Reference Light Scene
      description: Scene for ambient state. Will be activated when no motion is detected and light level is under threshold. Default value = scene.none
      default: scene.none
      selector:
        entity:
          domain: scene
    scene_day_light:
      name: Day Light Scene
      description: Scene for ambient state. Will be activated when no motion is detected and light level is under threshold. Default value = scene.none
      default: scene.none
      selector:
        entity:
          domain: scene
    scene_night_light:
      name: Night Light Scene
      description: Scene for ambient state. Will be activated when no motion is detected and light level is under threshold. Default value = scene.none
      default: scene.none
      selector:
        entity:
          domain: scene
mode: parallel
trigger:
  - platform: state
    entity_id: !input "light_state"
action:
  - variables:
      light_input_select: !input "light_state"
  - choose:
      - conditions:
          - "{{ is_state(light_input_select, 'Reference light') }}"
        sequence:
          - service: scene.turn_on
            entity_id: !input scene_reference_light
      - conditions:
          - "{{ is_state(light_input_select, 'Light off with insufficient lighting')
            or is_state(light_input_select, 'Light off with enough lighting') }}"
        sequence:
          - service: scene.turn_on
            entity_id: !input scene_light_off
      - conditions:
          - "{{ is_state(light_input_select, 'Light on') }}"
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: sun.sun
                    state: "above_horizon"
                sequence:
                  - service: scene.turn_on
                    entity_id: !input scene_day_light
            default:
              - service: scene.turn_on
                entity_id: !input scene_night_light
