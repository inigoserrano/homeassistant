blueprint:
  name: LPB - Dev State of house occupancy controlled by a door sensor
  description: 'This blueprint controls the occupancy of the house using one door sensor, usually the front door of the house.

  The state of the house is maintained in an input select, that must exists, with the following items:
      - Occupied
      - Not occupied
      - Checking occupancy

  To check if the house is occupied it uses the rest of the Less Push Buttons ecosystem of automations.
  '
  domain: automation
  input:
    door_sensor:
      name: Door Sensor
      description: The door sensor of the entrance door to the house.
      selector:
        entity:
          domain: binary_sensor
          device_class: opening
    area_state:
      name: House state
      description: 'Input select that handles the area state. It must have the following items:
      - Occupied
      - Not occupied
      - Checking occupancy
      '
      selector:
        entity:
          domain: input_select
    checking_occupancy_wait:
      name: Checking occupancy timeout
      description: Seconds to check if occupancy is detected.
      default: 120
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds
mode: restart
max_exceeded: silent
trigger:
  - platform: state
    entity_id: !input "door_sensor"
    to: 'off'
  - platform: event
    event_type: less_push_buttons
    event_data:
      occupied: true
      lpb_type: notify
variables:
  door_entity_id: !input "door_sensor"
  door_closed: "{{ trigger.entity_id == door_entity_id and trigger.to_state.state == 'off' }}"
  area_input_select: !input "area_state"  
  house_not_occupied: "{{ is_state(area_input_select, 'Not occupied') or is_state(area_input_select, 'Checking occupancy') }}"
condition:
  - condition: template
    value_template: "{{ door_closed or house_not_occupied }}"
action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'event'
                        and trigger.event.event_type == 'less_push_buttons'
                        and trigger.event.data.occupied == true }}"
        sequence:
          - service: input_select.select_option
            data:
              entity_id: !input "area_state"
              option: Occupied
      - conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'state' }}"
        sequence:
          - service: input_select.select_option
            data:
              entity_id: !input "area_state"
              option: Checking occupancy
          - delay: !input "checking_occupancy_wait"
          - service: input_select.select_option
            data:
              entity_id: !input "area_state"
              option: Not occupied

